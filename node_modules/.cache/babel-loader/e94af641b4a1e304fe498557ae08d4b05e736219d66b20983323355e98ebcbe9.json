{"ast":null,"code":"var _jsxFileName = \"D:\\\\Kirill\\\\piano-react\\\\src\\\\components\\\\lessons\\\\lessons.tsx\";\nimport './lessons.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst lessons = [{\n  name: 'lesson 1. Introduction'\n}, {\n  name: 'Lesson 2. Musical notation p.1'\n}, {\n  name: 'Lesson 3. Musical notation p.2'\n}, {\n  name: 'Lesson 4. Alterations'\n}, {\n  name: 'lesson 5. Introduction'\n}, {\n  name: 'Lesson 6. Musical notation p.1'\n}, {\n  name: 'Lesson 7. Musical notation p.2'\n}, {\n  name: 'Lesson 8. Alterations'\n}, {\n  name: 'lesson 9. Introduction'\n}, {\n  name: 'Lesson 10. Musical notation p.1'\n}, {\n  name: 'Lesson 11. Musical notation p.2'\n}, {\n  name: 'Lesson 12. Alterations'\n}];\nexport function Lessons() {\n  const list = lessons.map(lesson => {\n    /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" \", lesson.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 4\n    }, this);\n  });\n  console.log(list);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: list\n  }, void 0, false);\n}\n_c = Lessons;\nvar _c;\n$RefreshReg$(_c, \"Lessons\");","map":{"version":3,"names":["jsxDEV","_jsxDEV","Fragment","_Fragment","lessons","name","Lessons","list","map","lesson","children","fileName","_jsxFileName","lineNumber","columnNumber","console","log","_c","$RefreshReg$"],"sources":["D:/Kirill/piano-react/src/components/lessons/lessons.tsx"],"sourcesContent":["import './lessons.css';\r\n\r\nconst lessons = [\r\n    {name: 'lesson 1. Introduction'},\r\n    {name:'Lesson 2. Musical notation p.1'},\r\n    {name:'Lesson 3. Musical notation p.2'},\r\n    {name:'Lesson 4. Alterations'},\r\n    {name:'lesson 5. Introduction'},\r\n    {name:'Lesson 6. Musical notation p.1'},\r\n    {name:'Lesson 7. Musical notation p.2'},\r\n    {name:'Lesson 8. Alterations'},\r\n    {name:'lesson 9. Introduction'},\r\n    {name:'Lesson 10. Musical notation p.1'},\r\n    {name:'Lesson 11. Musical notation p.2'},\r\n    {name:'Lesson 12. Alterations'},\r\n]\r\n\r\nexport function Lessons() {\r\nconst list = lessons.map((lesson)=>{\r\n   <p> {lesson.name}</p>\r\n})\r\nconsole.log(list)\r\nreturn (\r\n    <>\r\n    {list}\r\n    </>    \r\n    )\r\n}"],"mappings":";AAAA,OAAO,eAAe;AAAC,SAAAA,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEvB,MAAMC,OAAO,GAAG,CACZ;EAACC,IAAI,EAAE;AAAwB,CAAC,EAChC;EAACA,IAAI,EAAC;AAAgC,CAAC,EACvC;EAACA,IAAI,EAAC;AAAgC,CAAC,EACvC;EAACA,IAAI,EAAC;AAAuB,CAAC,EAC9B;EAACA,IAAI,EAAC;AAAwB,CAAC,EAC/B;EAACA,IAAI,EAAC;AAAgC,CAAC,EACvC;EAACA,IAAI,EAAC;AAAgC,CAAC,EACvC;EAACA,IAAI,EAAC;AAAuB,CAAC,EAC9B;EAACA,IAAI,EAAC;AAAwB,CAAC,EAC/B;EAACA,IAAI,EAAC;AAAiC,CAAC,EACxC;EAACA,IAAI,EAAC;AAAiC,CAAC,EACxC;EAACA,IAAI,EAAC;AAAwB,CAAC,CAClC;AAED,OAAO,SAASC,OAAOA,CAAA,EAAG;EAC1B,MAAMC,IAAI,GAAGH,OAAO,CAACI,GAAG,CAAEC,MAAM,IAAG;IAChC,aAAAR,OAAA;MAAAS,QAAA,GAAG,GAAC,EAACD,MAAM,CAACJ,IAAI;IAAA;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EACxB,CAAC,CAAC;EACFC,OAAO,CAACC,GAAG,CAACT,IAAI,CAAC;EACjB,oBACIN,OAAA,CAAAE,SAAA;IAAAO,QAAA,EACCH;EAAI,gBACH,CAAC;AAEP;AAACU,EAAA,GAVeX,OAAO;AAAA,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}